generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model cart {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String?     @db.Uuid
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  user       user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cart_item  cart_item[]
}

model cart_item {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String?  @db.Uuid
  cart_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  cart       cart?    @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product    product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model marketplace {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String      @db.VarChar(255)
  description String?     @db.VarChar(255)
  price       Int
  shop_id     String?     @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  cart_item   cart_item[]
  shop        shop?       @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rating      rating[]
}

model rating {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  score      Int
  product_id String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  product    product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model shop {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  owner_id    String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  product     product[]
  user        user?     @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  cart        cart[]
  marketplace marketplace[]
  rating      rating[]
  shop        shop[]
}
